#!/bin/bash
set -e

NETWORK=
REPL_SET=
while [ $# -gt 0 ]; do
    case ${1} in
        --network)
            shift 1; NETWORK=$1; shift 1 ;;
        --replcaSet)
            shift 1; REPL_SET=$1; shift 1 ;;
        *)
            echo "Refuse to process $@; Unexpected arguments/flag"
            exit 1 ;;
    esac
done

# Replica command for a three node primary-secondary-secondary setup
replSetupCommand="rs.initiate({ \"_id\": \"${REPL_SET}\", \"version\": 1, \"members\": [ { \"_id\": 0, \"host\": \"mongo-1:27017\" }, { \"_id\": 1, \"host\": \"mongo-2:27017\" }, { \"_id\": 2, \"host\": \"mongo-3:27017\" } ] })"

# FIXME: how to setup restart condition so we don't mess up
docker service create --name mongo-1 --replicas 1 --network ${NETWORK} mongo:3.2.6 --replSet ${REPL_SET}
docker service create --name mongo-2 --replicas 1 --network ${NETWORK} mongo:3.2.6 --replSet ${REPL_SET}
docker service create --name mongo-3 --replicas 1 --network ${NETWORK} mongo:3.2.6 --replSet ${REPL_SET}

# Stupid sleep for 10s
sleep 10

# Spawn onetime service
docker service create --name mongo-repl-onetime --restart-condition none --replicas 1 --network ${NETWORK} mongo:3.2.6 mongo mongodb://mongo-1:27017/staging --eval "${replSetupCommand}"

# Stupid sleep for 3s
sleep 3

# Remove the onetime service
docker service rm mongo-repl-onetime
