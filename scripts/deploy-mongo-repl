#!/bin/bash
set -e

remove() {
    docker service rm mongo-1 mongo-2 mongo-3
}

build() {
    networkId=$(docker network ls -f name=${NETWORK} -q)
    if [ -z ${networkId} ]; then
        echo "Create overlay network: $(docker network create --driver overlay --subnet 10.0.0.0/24 ${network})";
    fi

    mongo1=$(docker service create --name mongo-1 --replicas 1 --network ${NETWORK} \
        --constraint 'node.hostname == manager-1' \
        --mount 'type=volume,src=mongo.1.db,dst=/data/db' \
        --mount 'type=volume,src=mongo.1.configdb,dst=/data/configdb' \
        mongo:3.2.6 --replSet ${REPL_SET})

    mongo2=$(docker service create --name mongo-2 --replicas 1 --network ${NETWORK} \
        --constraint 'node.hostname == manager-2' \
        --mount 'type=volume,src=mongo.2.db,dst=/data/db' \
        --mount 'type=volume,src=mongo.2.configdb,dst=/data/configdb' \
        mongo:3.2.6 --replSet ${REPL_SET})

    mongo3=$(docker service create --name mongo-3 --replicas 1 --network ${NETWORK} \
        --constraint 'node.hostname == manager-3' \
        --mount 'type=volume,src=mongo.3.db,dst=/data/db' \
        --mount 'type=volume,src=mongo.3.configdb,dst=/data/configdb' \
        mongo:3.2.6 --replSet ${REPL_SET})

    # Wait for it to complete, by sleeping
    # TODO: how do we know it is ready?
    sleep 120

    echo "Create mongo-1: ${mongo1}"
    echo "Create mongo-2: ${mongo2}"
    echo "Create mongo-3: ${mongo3}"
}

setup() {
    # Replica command for a three node primary-secondary-secondary setup
    replSetupCommand="rs.initiate({ \"_id\": \"${REPL_SET}\", \"version\": 1, \"members\": [ { \"_id\": 0, \"host\": \"mongo-1:27017\" }, { \"_id\": 1, \"host\": \"mongo-2:27017\" }, { \"_id\": 2, \"host\": \"mongo-3:27017\" } ] })"
    # Spawn onetime service
    mongoRepl=$(docker service create --name mongo-repl-onetime --replicas 1 --network ${NETWORK} \
        --restart-condition none \
        mongo:3.2.6 mongo mongodb://mongo-1:27017/${REPL_SET} --eval "${replSetupCommand}")
    echo "Spawn repl setup worker: ${mongoRepl}"

    # Wait for it to complete, by sleeping
    # TODO: how do we know it is ready?
    sleep 5

    # Remove the onetime service
    docker service rm mongo-repl-onetime
}

_help() {
    echo "deploy-mongo-repl [go|setup|rm|help] --network <overlay_network> --replSet <replica_set_name>"
}

_help_and_exit() {
    exit_code=${1:-0}; _help; exit ${1}
}

while [ $# -gt 0 ]; do
    case ${1} in
        --network)
            shift 1; NETWORK=$1; shift 1 ;;

        --replSet)
            shift 1; REPL_SET=$1; shift 1 ;;

        rm)
            shift 1; func="rm"; ;;

        go)
            shift 1; func="go"; ;;

        setup)
            shift 1; func="setup"; ;;

        -h|--help|help)
            _help_and_exit ;;

        *)
            echo "Refuse to process $@; Unexpected arguments/flag"
            _help_and_exit 1 ;;
    esac
done

case ${func} in
    rm)
        remove; exit 0 ;;
    go)
        build; exit 0 ;;
    setup)
        setup; exit 0 ;;
    *)
        echo "Please specify an action!"
        _help_and_exit 1 ;;
esac
