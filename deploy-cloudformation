#!/bin/bash
set -e

export PATH=${PWD}/scripts:${PWD}/vendor:${PATH}
export PYTHONPATH=${PWD}:${PYTHONPATH}

# Source config
source cloudformation.cfg

remove() {
    aws cloudformation delete-stack --stack-name ${stack_name}
    aws cloudformation wait stack-delete-complete --stack-name ${stack_name}
}

run() {
    aws cloudformation create-stack --stack-name ${stack_name} \
        --template-body ${template_body} \
        --parameters ParameterKey=Region,ParameterValue=${region} \
            ParameterKey=VpcId,ParameterValue=${vpc_id} \
            ParameterKey=Environment,ParameterValue=${environment} \
            ParameterKey=KeyName,ParameterValue=${key_name} \
            ParameterKey=EC2DockerEngineImageId,ParameterValue=${ami_id} \
            ParameterKey=EC2LaunchSubnetGroup,ParameterValue=${subnet_ids} \
            ParameterKey=EC2LaunchSecurityGroup,ParameterValue=${security_grps} \
            ParameterKey=EC2InstanceProfile,ParameterValue=${ec2_role} \
            ParameterKey=EC2InstanceType,ParameterValue=${ec2_type}

    aws cloudformation wait stack-create-complete --stack-name ${stack_name}

    # Execute composed ELB register command
    eval $(aws cloudformation describe-stacks --stack-name ${stack_name} | jq -r '.Stacks | .[0].Outputs | .[] | select(.OutputKey | contains("RegisterELBCommand")) | .OutputValue')

    # Sync available instances
    machine --confdir ${MACHINE_CONFDIR} aws --region ${region} config sync --vpc-id ${vpc_id}

    nodes=$(aws cloudformation describe-stacks --stack-name ${stack_name} | jq -r '.Stacks | .[0].Outputs | .[] | select(.OutputKey | contains("Manager")) | .OutputValue')
    eval $(machine --confdir ${MACHINE_CONFDIR} env ${nodes[0]})

    # Create Swarm Mode cluster from provided nodes
    deploy-swarm-cluster setup --cert ${CERT} --network ${NETWORK} ${nodes}

    # Deploy mongodb service
    deploy-mongo-repl --network ${NETWORK} --replSet ${REPL_SET} go

    # Setup mongodb replication cluster
    deploy-mongo-repl --network ${NETWORK} --replSet ${REPL_SET} setup
}

show() {
    aws cloudformation describe-stacks --stack-name ${stack_name}
}

while [ $# -gt 0 ]; do
    case ${1} in
        --cert)
            shift 1; CERT=$1; shift 1 ;;

        --network)
            shift 1; NETWORK=$1; shift 1 ;;

        --replSet)
            shift 1; REPL_SET=$1; shift 1 ;;

        rm)
            shift 1; func="rm"; ;;

        run)
            shift 1; func="run"; ;;

        show)
            shift 1; func="show"; ;;

        -h|--help|help)
            echo "deploy-cloudformation [run|rm|show|help] --cert <key> --network <overlay_network> --replSet <replica_set_name>"
            exit 0 ;;

        *)
            echo "Refuse to process $@; Unexpected arguments/flag"
            echo "deploy-cloudformation [run|rm|show|help] --cert <key> --network <overlay_network> --replSet <replica_set_name>"
            exit 1 ;;
    esac
done

case ${func} in
    rm)
        remove; exit 0 ;;
    run)
        run; exit 0 ;;
    show)
        show; exit 0 ;;
    *)
        echo "Please specify an action!"
        echo "deploy-cloudformation [run|rm|show|help] --cert <key> --network <overlay_network> --replSet <replica_set_name>"
        exit 1 ;;
esac
