#!/bin/bash
set -e

setup() {
    local cert=${1:?"Missing cert"}
    local network=${2:?"Missing network (overlay)"}

    shift 2
    local nodes=${@};

    if [ -z ${#nodes[@]} ]; then
        echo "You must specify at least one node"
        exit 1
    fi

    machine --confdir ${MACHINE_CONFDIR} --user ${MACHINE_USER} --cert ${cert} tls gen-cert-install ${nodes}

    args=
    for node in ${nodes}; do
        args="${args} --manager ${node}"
    done
    machine --confdir ${MACHINE_CONFDIR} create swarm ${args}

    eval $(machine --confdir ${MACHINE_CONFDIR} env ${nodes[0]})
    if [ -z ${network} ]; then
        true
    else
        networkId=$(docker network ls -f name=${network} -q)
        if [ -z ${networkId} ]; then
            echo "Create overlay network: $(docker network create --driver overlay --subnet 10.0.0.0/24 ${network})";
        fi
    fi
}

_help() {
    echo "deploy-swarm-cluster [setup|help] --cert <key> --network <overlay_network> [node ...]"
}

_help_and_exit() {
    exit_code=${1:-0}; _help; exit ${1}
}

while [ $# -gt 0 ]; do
    case ${1} in
        --cert)
            shift 1; CERT=$1; shift 1 ;;

        --network)
            shift 1; NETWORK=$1; shift 1 ;;

        --uset)
            shift 1; MACHINE_USER=$1; shift 1 ;;

        --confdir)
            shift 1; MACHINE_CONFDIR=$1; shift 1 ;;

        setup)
            shift 1; func="setup"; ;;

        -h|--help|help)
            _help_and_exit ;;

        *)
            NODES="${NODES} ${1}"; shift 1 ;;
    esac
done

if [ -z ${MACHINE_CONFDIR} ]; then
    MACHINE_CONFDIR=~/.machine
fi

if [ -z ${MACHINE_USER} ]; then
    MACHINE_USER=ubuntu
fi

case ${func} in
    setup)
        setup ${CERT} ${NETWORK} ${NODES}; exit 0 ;;
    *)
        echo "Please specify an action!"
        _help_and_exit 1 ;;
esac
